==11584== Memcheck, a memory error detector
==11584== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==11584== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==11584== Command: ./main 10 10 testdir tocopy
==11584== Parent PID: 9505
==11584== 
==11584== 
==11584== HEAP SUMMARY:
==11584==     in use at exit: 1,654 bytes in 4 blocks
==11584==   total heap usage: 170 allocs, 166 frees, 5,014,318 bytes allocated
==11584== 
==11584== 36 bytes in 1 blocks are still reachable in loss record 1 of 4
==11584==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11584==    by 0x401F5DE: strdup (strdup.c:42)
==11584==    by 0x4019A91: _dl_load_cache_lookup (dl-cache.c:338)
==11584==    by 0x400A989: _dl_map_object (dl-load.c:2102)
==11584==    by 0x4015D46: dl_open_worker (dl-open.c:513)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x4015609: _dl_open (dl-open.c:837)
==11584==    by 0x49DDAE0: do_dlopen (dl-libc.c:96)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x49DEC12: _dl_catch_error (dl-error-skeleton.c:227)
==11584==    by 0x49DDC14: dlerror_run (dl-libc.c:46)
==11584==    by 0x49DDC14: __libc_dlopen_mode (dl-libc.c:195)
==11584==    by 0x486F9FA: pthread_cancel_init (unwind-forcedunwind.c:53)
==11584== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:strdup
   fun:_dl_load_cache_lookup
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
}
==11584== 36 bytes in 1 blocks are still reachable in loss record 2 of 4
==11584==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11584==    by 0x400D5B7: _dl_new_object (dl-object.c:196)
==11584==    by 0x4006E96: _dl_map_object_from_fd (dl-load.c:997)
==11584==    by 0x400A61A: _dl_map_object (dl-load.c:2236)
==11584==    by 0x4015D46: dl_open_worker (dl-open.c:513)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x4015609: _dl_open (dl-open.c:837)
==11584==    by 0x49DDAE0: do_dlopen (dl-libc.c:96)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x49DEC12: _dl_catch_error (dl-error-skeleton.c:227)
==11584==    by 0x49DDC14: dlerror_run (dl-libc.c:46)
==11584==    by 0x49DDC14: __libc_dlopen_mode (dl-libc.c:195)
==11584==    by 0x486F9FA: pthread_cancel_init (unwind-forcedunwind.c:53)
==11584== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:malloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
}
==11584== 384 bytes in 1 blocks are still reachable in loss record 3 of 4
==11584==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11584==    by 0x401331C: _dl_check_map_versions (dl-version.c:274)
==11584==    by 0x40160FC: dl_open_worker (dl-open.c:577)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x4015609: _dl_open (dl-open.c:837)
==11584==    by 0x49DDAE0: do_dlopen (dl-libc.c:96)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x49DEC12: _dl_catch_error (dl-error-skeleton.c:227)
==11584==    by 0x49DDC14: dlerror_run (dl-libc.c:46)
==11584==    by 0x49DDC14: __libc_dlopen_mode (dl-libc.c:195)
==11584==    by 0x486F9FA: pthread_cancel_init (unwind-forcedunwind.c:53)
==11584==    by 0x486FC13: _Unwind_ForcedUnwind (unwind-forcedunwind.c:127)
==11584==    by 0x486DF65: __pthread_unwind (unwind.c:121)
==11584== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dl_check_map_versions
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
   fun:_Unwind_ForcedUnwind
   fun:__pthread_unwind
}
==11584== 1,198 bytes in 1 blocks are still reachable in loss record 4 of 4
==11584==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==11584==    by 0x400D283: _dl_new_object (dl-object.c:89)
==11584==    by 0x4006E96: _dl_map_object_from_fd (dl-load.c:997)
==11584==    by 0x400A61A: _dl_map_object (dl-load.c:2236)
==11584==    by 0x4015D46: dl_open_worker (dl-open.c:513)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x4015609: _dl_open (dl-open.c:837)
==11584==    by 0x49DDAE0: do_dlopen (dl-libc.c:96)
==11584==    by 0x49DEB47: _dl_catch_exception (dl-error-skeleton.c:208)
==11584==    by 0x49DEC12: _dl_catch_error (dl-error-skeleton.c:227)
==11584==    by 0x49DDC14: dlerror_run (dl-libc.c:46)
==11584==    by 0x49DDC14: __libc_dlopen_mode (dl-libc.c:195)
==11584==    by 0x486F9FA: pthread_cancel_init (unwind-forcedunwind.c:53)
==11584== 
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   fun:calloc
   fun:_dl_new_object
   fun:_dl_map_object_from_fd
   fun:_dl_map_object
   fun:dl_open_worker
   fun:_dl_catch_exception
   fun:_dl_open
   fun:do_dlopen
   fun:_dl_catch_exception
   fun:_dl_catch_error
   fun:dlerror_run
   fun:__libc_dlopen_mode
   fun:pthread_cancel_init
}
==11584== LEAK SUMMARY:
==11584==    definitely lost: 0 bytes in 0 blocks
==11584==    indirectly lost: 0 bytes in 0 blocks
==11584==      possibly lost: 0 bytes in 0 blocks
==11584==    still reachable: 1,654 bytes in 4 blocks
==11584==         suppressed: 0 bytes in 0 blocks
==11584== 
==11584== For lists of detected and suppressed errors, rerun with: -s
==11584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
